{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nconst _c0 = [\"pointTooltipElement\"];\n\nfunction ExplorerNotesComponent_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function ExplorerNotesComponent_button_4_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const notes_r4 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onClickNoteData(notes_r4));\n    })(\"mouseenter\", function ExplorerNotesComponent_button_4_Template_button_mouseenter_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const notes_r4 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.onMouseEnter(notes_r4));\n    })(\"mouseleave\", function ExplorerNotesComponent_button_4_Template_button_mouseleave_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onMouseLeave());\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const notes_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"top\", ctx_r1.getXValue(notes_r4.coordinatesString), \"%\")(\"left\", ctx_r1.getYValue(notes_r4.coordinatesString), \"%\")(\"background-color\", ctx_r1.getColor(notes_r4.type, i_r5));\n  }\n}\n\nfunction ExplorerNotesComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelement(1, \"br\");\n    i0.ɵɵelementStart(2, \"div\", 11)(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"display\", ctx_r2.aIsHidden ? \"none\" : \"block\")(\"top\", ctx_r2.getXValue(ctx_r2.aNoteData.coordinatesString), \"%\")(\"left\", ctx_r2.getYValue(ctx_r2.aNoteData.coordinatesString), \"%\")(\"font-size\", ctx_r2.aPointWrapperWidth / 50, \"px\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r2.aNoteData.type);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.getCoordinatesFormatted(ctx_r2.aNoteData.coordinatesString));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.aNoteData.type + \" \" + ctx_r2.aNoteData.author + \" \" + ctx_r2.aNoteData.topic);\n  }\n}\n\nfunction ExplorerNotesComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵlistener(\"mouseenter\", function ExplorerNotesComponent_div_9_Template_div_mouseenter_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const notes_r10 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.onMouseEnter(notes_r10));\n    })(\"mouseleave\", function ExplorerNotesComponent_div_9_Template_div_mouseleave_0_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.onMouseLeave());\n    })(\"click\", function ExplorerNotesComponent_div_9_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const notes_r10 = restoredCtx.$implicit;\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.onClickNoteData(notes_r10));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelement(4, \"br\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelement(6, \"br\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const notes_r10 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", notes_r10.type, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.getCoordinatesFormatted(notes_r10.coordinatesString), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", notes_r10.topic + \" \" + notes_r10.author, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", notes_r10.location, \" \");\n  }\n}\n\nexport let ExplorerNotesComponent = /*#__PURE__*/(() => {\n  class ExplorerNotesComponent {\n    constructor(http, baseUrl) {\n      this.aExplorerNotesData = [];\n      this.aPickedExplorerNotes = [];\n      this.aIsHidden = true;\n      this.aPointWrapperWidth = 0;\n      this.aNoteData = null;\n      http.get(baseUrl + 'weatherforecast').subscribe(result => {\n        this.aExplorerNotesData = result;\n        console.log(this.aExplorerNotesData);\n      }, error => console.error(error));\n      this.returnNotesFromLocalStorage();\n    }\n\n    ngOnInit() {\n      console.log(this.aExplorerNotesData);\n      console.log(this.aPickedExplorerNotes);\n    }\n\n    ngAfterViewChecked() {\n      if (this.aElementPointTooltipTextWrapper) {\n        this.aPointWrapperWidth = this.aElementPointTooltipTextWrapper.nativeElement.offsetWidth;\n      }\n    }\n\n    getXValue(parCoordinates) {\n      return 100 / (93 - 7) * (parseFloat(parCoordinates.split(\",\")[0]) - 7);\n    }\n\n    getYValue(parCoordinates) {\n      return 100 / (93 - 7) * (parseFloat(parCoordinates.split(\",\")[1]) - 7);\n    }\n\n    getCoordinatesFormatted(parCoordinates) {\n      return \"Lat: \" + parCoordinates.split(\",\")[0] + \" Lon: \" + parCoordinates.split(\",\")[1];\n    }\n\n    checkCoordinatesValid(parCoordinates) {\n      return parCoordinates.split(\",\")[0] === \"0\" && parCoordinates.split(\",\")[1] === \"0\";\n    }\n\n    filterOnlyValidCoordinatesNotes() {\n      return this.aExplorerNotesData.filter(element => {\n        return !this.checkCoordinatesValid(element.coordinatesString);\n      });\n    }\n\n    getColor(parType, index) {\n      this.returnNotesFromLocalStorage();\n\n      if (this.aPickedExplorerNotes.find(element => {\n        return element.id === this.aExplorerNotesData[index].id;\n      })) {\n        return \"lime\";\n      }\n\n      if (parType === \"Dossier\") {\n        return \"Fuchsia \t\";\n      }\n\n      if (parType === \"Note\" || parType === \"Record\") {\n        return \"Yellow\";\n      }\n\n      if (parType == \"Discovery\") {\n        return \"cyan\";\n      }\n\n      if (parType == \"Hologram\") {\n        return \"black\";\n      }\n\n      if (parType == \"Genesis2Chronicles\") {\n        return \"blue\";\n      }\n\n      return \"white\";\n    }\n\n    onClickNote(index) {\n      this.returnNotesFromLocalStorage();\n\n      if (this.aPickedExplorerNotes.find(element => {\n        return element.id === this.aExplorerNotesData[index].id;\n      })) {\n        console.log(\"In Storage \" + this.aExplorerNotesData[index].id); // If Note is in Local Storage - That means it is clicked - We needs to remove it\n\n        this.removeNoteFromLocalStorage(this.aExplorerNotesData[index].id);\n        console.log(\"removed \" + this.aExplorerNotesData[index].id);\n      } else {\n        // If Note is not in Local Storage - That means it is not clicked - We needs to add it\n        this.savePickedNoteToLocalStorage(this.aExplorerNotesData[index].id);\n        console.log(\"added \" + this.aExplorerNotesData[index].id);\n      }\n    }\n\n    onClickNoteData(note) {\n      this.returnNotesFromLocalStorage();\n\n      if (this.aPickedExplorerNotes.find(element => {\n        return element.id === note.id;\n      })) {\n        console.log(\"In Storage \" + note.id); // If Note is in Local Storage - That means it is clicked - We needs to remove it\n\n        this.removeNoteFromLocalStorage(note.id);\n        console.log(\"removed \" + note.id);\n      } else {\n        // If Note is not in Local Storage - That means it is not clicked - We needs to add it\n        this.savePickedNoteToLocalStorage(note.id);\n        console.log(\"added \" + note.id);\n      }\n    }\n\n    savePickedNoteToLocalStorage(parNodeId) {\n      this.returnNotesFromLocalStorage();\n      var tmpPickedEplorerNote = {\n        id: parNodeId\n      };\n      this.aPickedExplorerNotes.push(tmpPickedEplorerNote);\n      localStorage.setItem(\"picked_notes\", JSON.stringify(this.aPickedExplorerNotes));\n    }\n\n    removeNoteFromLocalStorage(parNodeId) {\n      this.returnNotesFromLocalStorage();\n      this.aPickedExplorerNotes = this.aPickedExplorerNotes.filter(element => {\n        return element.id !== parNodeId;\n      });\n      localStorage.setItem(\"picked_notes\", JSON.stringify(this.aPickedExplorerNotes));\n    }\n\n    returnNotesFromLocalStorage() {\n      var tmpStringifiedLocalStorageNotes = localStorage.getItem('picked_notes');\n\n      if (tmpStringifiedLocalStorageNotes) {\n        this.aPickedExplorerNotes = JSON.parse(tmpStringifiedLocalStorageNotes);\n      }\n    }\n\n    onMouseEnter(parNoteData) {\n      if (!this.checkCoordinatesValid(parNoteData.coordinatesString)) {\n        this.aIsHidden = false;\n        this.aNoteData = parNoteData;\n      }\n    }\n\n    onMouseLeave() {\n      this.aIsHidden = true;\n    }\n\n    filterNotesNotCollected() {\n      return this.aExplorerNotesData.filter(object1 => {\n        return !this.aPickedExplorerNotes.some(object2 => {\n          return object1.id === object2.id;\n        });\n      });\n    }\n\n  }\n\n  ExplorerNotesComponent.ɵfac = function ExplorerNotesComponent_Factory(t) {\n    return new (t || ExplorerNotesComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n  };\n\n  ExplorerNotesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ExplorerNotesComponent,\n    selectors: [[\"app-explorer-notes\"]],\n    viewQuery: function ExplorerNotesComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.aElementPointTooltipTextWrapper = _t.first);\n      }\n    },\n    decls: 10,\n    vars: 3,\n    consts: [[1, \"main-wrapper\"], [1, \"map-wrapper\"], [1, \"point-wrapper\"], [\"pointTooltipElement\", \"\"], [\"class\", \"point\", 3, \"top\", \"left\", \"background-color\", \"click\", \"mouseenter\", \"mouseleave\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"point-tooltip\", 3, \"display\", \"top\", \"left\", \"font-size\", 4, \"ngIf\"], [\"id\", \"test\"], [1, \"note-sidebar\"], [\"class\", \"not-yet-collected\", 3, \"mouseenter\", \"mouseleave\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"point\", 3, \"click\", \"mouseenter\", \"mouseleave\"], [1, \"point-tooltip\"], [1, \"point-tooltip-text-wrapper\"], [1, \"not-yet-collected\", 3, \"mouseenter\", \"mouseleave\", \"click\"]],\n    template: function ExplorerNotesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2, 3);\n        i0.ɵɵtemplate(4, ExplorerNotesComponent_button_4_Template, 1, 6, \"button\", 4);\n        i0.ɵɵelementContainerStart(5);\n        i0.ɵɵtemplate(6, ExplorerNotesComponent_div_6_Template, 9, 11, \"div\", 5);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 7);\n        i0.ɵɵtemplate(9, ExplorerNotesComponent_div_9_Template, 8, 4, \"div\", 8);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.filterOnlyValidCoordinatesNotes());\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.aNoteData);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.filterNotesNotCollected());\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf],\n    styles: [\".main-wrapper[_ngcontent-%COMP%]{display:flex;flex-direction:row}.note-sidebar[_ngcontent-%COMP%]{margin-left:15px}.map-wrapper[_ngcontent-%COMP%]{display:block;position:relative;width:40vw;height:40vw;background-image:url(/assets/the_island_map.webp);background-position:center;background-size:cover;background-repeat:no-repeat}.point-wrapper[_ngcontent-%COMP%]{display:block;height:100%;width:100%;position:absolute;inset:0 100% 100% 0}.point[_ngcontent-%COMP%]{position:absolute;background-color:#000;width:10px;height:10px;border-radius:50%;margin-left:-5px;margin-top:-5px;border:1px solid black;padding:0}.point-tooltip[_ngcontent-%COMP%]{position:absolute;background-color:#d3d3d3;width:30%;height:10%;border:1px solid black;color:#000;border-radius:10px;margin-top:1%;display:flex;flex-direction:column;font-size:60%;overflow:hidden}.point-tooltip[_ngcontent-%COMP%]   br[_ngcontent-%COMP%]{display:none}.point-tooltip[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:0;padding:0}.point[_ngcontent-%COMP%]:focus{background-color:#0f0}.note-details[_ngcontent-%COMP%]{display:block;width:50px;height:50px;background-color:#000;margin:0 .1em}.note-sidebar[_ngcontent-%COMP%]{height:40vw;overflow:scroll}.not-yet-collected[_ngcontent-%COMP%]{padding:.3em;border:1px solid slategray;margin:.2em 0}.not-yet-collected[_ngcontent-%COMP%]:hover{transition-duration:.5s;background-color:#a9a9a9}@media screen and (max-width: 1440px){.main-wrapper[_ngcontent-%COMP%]{flex-direction:column;align-items:center;width:90vw}.not-yet-collected[_ngcontent-%COMP%]{width:calc(100vw / 2.75)}.map-wrapper[_ngcontent-%COMP%]{width:80vw;height:80vw}}\"]\n  });\n  return ExplorerNotesComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}